Exercise 6: queries on college database
----------------------------------------

- Retrieve the name, city and grade point average (GPA) of
  students, greater than or  equal to 3.7

mysql> select stdFirstName, stdLastName, stdCity, stdGPA from student where stdGPA >= 3.7;
+--------------+-------------+---------+--------+
| stdFirstName | stdLastName | stdCity | stdGPA |
+--------------+-------------+---------+--------+
| CRISTOPHER   | COLAN       | SEATTLE |   4.00 |
| WILLIAM      | PILGRIM     | BOTHELL |   3.80 |
+--------------+-------------+---------+--------+
2 rows in set (0.00 sec)


- List the name and hiring date of faculty hired in 1999 or 2000

mysql> mysql> select FacFirstName, FacLastName, FacHireDate from faculty where FacHireDate like "1999%" or FacHiredate like "2000%";
+--------------+-------------+-------------+
| FacFirstName | FacLastName | FacHireDate |
+--------------+-------------+-------------+
| CRISTOPHER   | COLAN       | 1999-03-01  |
| JULIA        | MILLS       | 2000-03-15  |
+--------------+-------------+-------------+
2 rows in set (0.00 sec)


- List the offer number, course number and faculty Social Security
  number for course  offerings scheduled in fall 2005 or winter 2006

mysql> select OfferNo, CourseNo, FacSSN, OffTerm, OffYear from offering where OffTerm = "FALL" and OffYear = 2005 or OffTerm = "WINTER" and OffYear = 2006;
+---------+----------+-------------+---------+---------+
| OfferNo | CourseNo | FacSSN      | OffTerm | OffYear |
+---------+----------+-------------+---------+---------+
|    1234 | IS320    | 098-76-5432 | FALL    |    2005 |
|    4321 | IS320    | 098-76-5432 | FALL    |    2005 |
|    4444 | IS320    | 543-21-0987 | WINTER  |    2006 |
|    5555 | FIN300   | 765-43-2109 | WINTER  |    2006 |
|    5678 | IS480    | 987-65-4321 | WINTER  |    2006 |
|    6666 | FIN450   | 987-65-4321 | WINTER  |    2006 |
+---------+----------+-------------+---------+---------+
6 rows in set (0.00 sec)

mysql> select OfferNo, CourseNo, FacSSN from offering where OffTerm = "FALL" and OffYear = 2005 or OffTerm = "WINTER" and OffYear = 2006;
+---------+----------+-------------+
| OfferNo | CourseNo | FacSSN      |
+---------+----------+-------------+
|    1234 | IS320    | 098-76-5432 |
|    4321 | IS320    | 098-76-5432 |
|    4444 | IS320    | 543-21-0987 |
|    5555 | FIN300   | 765-43-2109 |
|    5678 | IS480    | 987-65-4321 |
|    6666 | FIN450   | 987-65-4321 |
+---------+----------+-------------+
6 rows in set (0.00 sec)


- List the offering number, course number, days and time of
  offerings containing the  words 'database' or 'programming'
  in the course description and taught in spring  2006.

mysql> select OfferNo, c.CourseNo, crsDesc, OffTime, OffDays, OffTerm, OffYear from offering o join course c on o.CourseNo=c.CourseNo where (crsDesc like "%database%" or crsDesc like "%programming%") and OffTerm = "SPRING" and OffYear = 2006; 
+---------+----------+--------------------------------------+----------+---------+---------+---------+
| OfferNo | CourseNo | crsDesc                              | OffTime  | OffDays | OffTerm | OffYear |
+---------+----------+--------------------------------------+----------+---------+---------+---------+
|    3333 | IS320    | FUNDAMENTALS OF BUSINESS PROGRAMMING | 08:30:00 | MW      | SPRING  |    2006 |
|    5679 | IS480    | FUNDAMENTALS OF DATABASE MANAGEMENT  | 15:30:00 | TTH     | SPRING  |    2006 |
+---------+----------+--------------------------------------+----------+---------+---------+---------+
2 rows in set (0.00 sec)


- List the offer number, course number and name of the instructor of IS
  course  offerings scheduled in fall 2005 taught by assistant professors

mysql> mysql> select OfferNo, CourseNo, FacFirstName, FacLastName from offering o join faculty f on o.FacSSN=f.FacSSN where CourseNo like "IS%" Term = "fall" and OffYear = 2005 and FacRank = "ASST";
+---------+----------+--------------+-------------+
| OfferNo | CourseNo | FacFirstName | FacLastName |
+---------+----------+--------------+-------------+
|    1234 | IS320    | LEONARD      | VINCE       |
|    4321 | IS320    | LEONARD      | VINCE       |
+---------+----------+--------------+-------------+
2 rows in set (0.00 sec)


- Summarize the average GPA of students by major.


mysql> select avg(stdGPA), stdMajor from student group by stdMajor;
+-------------+----------+
| avg(stdGPA) | stdMajor |
+-------------+----------+
|    3.233333 | IS       |
|    2.800000 | FIN      |
|    3.400000 | ACCT     |
+-------------+----------+
3 rows in set (0.00 sec)

mysql> select avg(stdGPA) average_GPA, stdMajor from student group by stdMajor;
+-------------+----------+
| average_GPA | stdMajor |
+-------------+----------+
|    3.233333 | IS       |
|    2.800000 | FIN      |
|    3.400000 | ACCT     |
+-------------+----------+
3 rows in set (0.00 sec)


- Summarize the number of offerings and unique courses by year.

mysql> select count(distinct CourseNo), count(OfferNo), OffYear from offering group by OffYear;
+--------------------------+----------------+---------+
| count(distinct CourseNo) | count(OfferNo) | OffYear |
+--------------------------+----------------+---------+
|                        2 |              3 |    2005 |
|                        6 |             10 |    2006 |
+--------------------------+----------------+---------+
2 rows in set (0.00 sec)


- Summarize the average GPA of upper-division (junior or senior)
  students by major.  Only list the major with average GPA
  greater than 3.1.

mysql> select avg(stdGPA) average_GPA, stdMajor from student where stdClass = "JR" or stdClass = "SR" group by stdMajor having average_GPA > 3.1;
+-------------+----------+
| average_GPA | stdMajor |
+-------------+----------+
|    3.500000 | ACCT     |
|    3.150000 | IS       |
+-------------+----------+
2 rows in set (0.00 sec)


- Summarize the minimum and maximum GPA of students by major and class.

mysql> select min(stdGPA), max(stdGPA), stdMajor, stdClass from student group by stdMajor, stdClass;
+-------------+-------------+----------+----------+
| min(stdGPA) | max(stdGPA) | stdMajor | stdClass |
+-------------+-------------+----------+----------+
|        3.00 |        3.00 | IS       | FR       |
|        2.50 |        2.70 | FIN      | JR       |
|        3.50 |        3.50 | ACCT     | JR       |
|        2.20 |        4.00 | IS       | SR       |
|        3.20 |        3.20 | FIN      | SR       |
|        3.60 |        3.60 | IS       | JR       |
|        3.30 |        3.30 | ACCT     | SO       |
|        3.80 |        3.80 | IS       | SO       |
+-------------+-------------+----------+----------+
8 rows in set (0.00 sec)

- Summarize the number of IS course offering by course description.

mysql> select count(OfferNo), crsDesc from offering o join course c on o.CourseNo=c.CourseNo where o.CourseNo like "IS%" group by crsDesc;
+----------------+--------------------------------------+
| count(OfferNo) | crsDesc                              |
+----------------+--------------------------------------+
|              6 | FUNDAMENTALS OF BUSINESS PROGRAMMING |
|              2 | SYSTEMS ANALYSIS                     |
|              2 | FUNDAMENTALS OF DATABASE MANAGEMENT  |
+----------------+--------------------------------------+
3 rows in set (0.00 sec)


- List the GPA, name, city and state of juniors, lowest GPA first.

mysql> select stdGPA, stdFirstName, stdLastName, stdCity, stdState, stdClass from student where stdClass = "JR" order by stdGPA;
+--------+--------------+-------------+---------+----------+----------+
| stdGPA | stdFirstName | stdLastName | stdCity | stdState | stdClass |
+--------+--------------+-------------+---------+----------+----------+
|   2.50 | ROBERTO      | MORALES     | SEATTLE | WA       | JR       |
|   2.70 | BOB          | NORBERT     | BOTHELL | WA       | JR       |
|   3.50 | CANDY        | KENDALL     | TACOMA  | WA       | JR       |
|   3.60 | MARIAH       | DODGE       | SEATTLE | WA       | JR       |
+--------+--------------+-------------+---------+----------+----------+
4 rows in set (0.00 sec)


- List the unique city and state combination in the Faculty table.

mysql> select distinct(concat(FacCity,", ",FacState)) as city_state from faculty;
+--------------+
| city_state   |
+--------------+
| SEATTLE, WA  |
| BOTHELL, WA  |
| BELLEVUE, WA |
+--------------+
3 rows in set (0.00 sec)

mysql> select distinct FacCity, FacState from faculty;
+----------+----------+
| FacCity  | FacState |
+----------+----------+
| SEATTLE  | WA       |
| BOTHELL  | WA       |
| BELLEVUE | WA       |
+----------+----------+
3 rows in set (0.00 sec)


-  List the student name, offering number and grade of students
  who have a grade >= 3.5 in a course offering.

mysql> select stdFirstName, stdLastName, OfferNo, EnrGrade from enrollment e join student s on e.StdSSN=s.StdSSN where EnrGrade >= 3.5;
+--------------+-------------+---------+----------+
| stdFirstName | stdLastName | OfferNo | EnrGrade |
+--------------+-------------+---------+----------+
| CANDY        | KENDALL     |    1234 |     3.50 |
| MARIAH       | DODGE       |    1234 |     3.80 |
| HOMER        | WELLS       |    4321 |     3.50 |
| ROBERTO      | MORALES     |    4321 |     3.50 |
| BOB          | NORBERT     |    5679 |     3.70 |
| ROBERTO      | MORALES     |    5679 |     3.80 |
| MARIAH       | DODGE       |    6666 |     3.60 |
| LUKE         | BRAZZI      |    7777 |     3.70 |
| BOB          | NORBERT     |    9876 |     3.50 |
| WILLIAM      | PILGRIM     |    9876 |     4.00 |
+--------------+-------------+---------+----------+
10 rows in set (0.00 sec)


- List the names of students (without duplicates) who have
  grades >= 3.5 in a course offering.

mysql> select distinct stdFirstName, stdLastName from student s join enrollment e on s.StdSSN=e.StdSSN where EnrGrade >= 3.5;
+--------------+-------------+
| stdFirstName | stdLastName |
+--------------+-------------+
| CANDY        | KENDALL     |
| MARIAH       | DODGE       |
| HOMER        | WELLS       |
| ROBERTO      | MORALES     |
| BOB          | NORBERT     |
| LUKE         | BRAZZI      |
| WILLIAM      | PILGRIM     |
+--------------+-------------+
7 rows in set (0.00 sec)


- List Bob Norbert's course schedule in spring 2006. For each course,
  list the offering  number, course number, days, location, time and faculty name.

mysql> select o.OfferNo, CourseNo, OffDays, OffLocation, OffTime, FacFirstName, FacLastName from offering o join enrollment e on o.OfferNo=e.OfferNo join student s on e.StdSSN=s.StdSSN join faculty f on o.FacSSN=f.FacSSN where stdFirstName = "Bob" and o.OffTerm = "spring" and OffYear = 2006;
+---------+----------+---------+-------------+----------+--------------+-------------+
| OfferNo | CourseNo | OffDays | OffLocation | OffTime  | FacFirstName | FacLastName |
+---------+----------+---------+-------------+----------+--------------+-------------+
|    9876 | IS460    | TTH     | BLM307      | 13:30:00 | LEONARD      | FIBON       |
|    5679 | IS480    | TTH     | BLM412      | 15:30:00 | CRISTOPHER   | COLAN       |
+---------+----------+---------+-------------+----------+--------------+-------------+
2 rows in set (0.01 sec)